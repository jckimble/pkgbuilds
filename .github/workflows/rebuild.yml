name: Rebuild Archlinux Repository

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/rebuild.yml'
  workflow_run:
    workflows: ["Setup"]
    types:
      - completed
  release:
    types:
      - deleted
permissions:
  packages: write
  contents: write

concurrency:
  group: "release"

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      enc-gpg: ${{ steps.config.outputs.enc-gpg }}
      repo-name: ${{ steps.config.outputs.repo-name }}
      packager: ${{ steps.config.outputs.packager }}

      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: master
    - id: config
      uses: ./.github/actions/load-config
    - id: set-matrix
      run: |
        set_output () {
          if [[ -z "${ACT}" ]]; then
            echo "${1}=${2}" | tee -a "${GITHUB_OUTPUT}"
          else
            echo "set-output name=${1}::${2}"
            echo "::set-output name=${1}::${2}"
          fi
        }
        set_output matrix "`find . -iname 'PKGBUILD' -exec bash -c \"basename \\$(dirname \\"{}\\")\" \\; | jq -R -s -c 'split(\"\n\")[:-1]'`"

  remove-release:
    runs-on: ubuntu-latest
    needs:
      - variables
    steps:
      - uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          delete_release: true # default: false
          tag_name: repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-package:
    runs-on: ubuntu-latest
    needs: 
      - variables
      - remove-release

    strategy:
      matrix:
        package: ${{ fromJson(needs.variables.outputs.matrix) }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: master
    - name: Build ${{ matrix.package }}
      uses: ./.github/actions/archlinux
      env:
        PACKAGER: ${{ needs.variables.outputs.packager }}
        SECRET: ${{ secrets.ENCRYPTION_KEY }}
        GPGKEY: ${{ needs.variables.outputs.enc-gpg }}
      with:
        dir: ${{ matrix.package }}
        run: makepkg -sr --sign -C -c --noconfirm --noprogressbar
    - name: Upload new package ${{ matrix.package }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: repository
        file: ${{ matrix.package }}/*.pkg.*
        file_glob: true
        overwrite: false

  build-repo:
    runs-on: "ubuntu-latest"
    needs: 
      - variables
      - build-package

    steps:
    - uses: actions/checkout@v4
      with:
        ref: master
    - name: Get current packages
      uses: robinraju/release-downloader@v1.11
      with:
        latest: true
        fileName: '*.pkg.*'
        tarBall: false
        zipBall: false
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Repo
      uses: ./.github/actions/archlinux
      env:
        PACKAGER: ${{ needs.variables.outputs.packager }}
        SECRET: ${{ secrets.ENCRYPTION_KEY }}
        GPGKEY: ${{ needs.variables.outputs.enc-gpg }}
      with:
        run: repo-add -s -q --nocolor -n -R ${{ needs.variables.outputs.repo-name }}.db.tar.gz *.pkg.tar.zst
    - name: Upload new repo
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: repository
        file: ${{ needs.variables.outputs.repo-name }}.db*
        file_glob: true
        overwrite: true
